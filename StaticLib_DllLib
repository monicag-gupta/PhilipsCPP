// mathlib.h
#pragma once
int add(int a, int b);

// mathlib.cpp
#include "mathlib.h"
int add(int a, int b) { return a + b; }

//In Client Project:
// main.cpp
#include <iostream>
#include "../StaticLib1/mathlib.h"
int main() {
    std::cout << add(3, 4) << "\n";
}





Create a Static Library (.lib): StaticLib1  project in VS2022.
Build it → produces .lib.
Link .lib into your main app project.



1) In the same Sol Add a Static  Lib project
2) Remove precompiled lib from project
3) create mathlib.h
4) create mathlib.cpp
5) code them
6) Build the Project
7) Main Project -> Add Reference -> Tick on the Static Lib1
8) Use the lib in main.cpp












Dynamic Library

Create a Dynamic-Link Library (.dll) project : Dll1:
Properties -> C/C++ → Preprocessor → Preprocessor Definitions ->
        Add MATHLIB_EXPORTS 
Ensure No PreCompiled Header files are used.
Build the project (Build → Build Dll1).

Link .dll into your main app project.




InDLL1 project:

// mathlibDLL.h
#pragma once
#ifdef MATHLIB_EXPORTS
#define MATHLIB_API __declspec(dllexport)
#else
#define MATHLIB_API __declspec(dllimport)
#endif

extern "C" MATHLIB_API int add(int a, int b);


// mathlibDLL.cpp
#include "mathlibDLL.h"
int add(int a, int b) { return a + b; }



In Main Proj : 

// main.cpp
#include <iostream>
#include "../Dll1/mathlibDLL.h"
int main() {
    std::cout << add(5, 6) << "\n";
}
