Exercise: Employee Management System (Console-Based) using Modern C++:

Objective:
Design a simple employee management system in modern C++ that demonstrates the use of:
auto type deduction
nullptr
enum class 
range-based for loop
smart pointers 
lambda expressions 
move semantics 


Step 1: Define a Department using enum class
Use enum class Department { HR, Finance, Engineering, Marketing };


Step 2: Create an Employee class
Attributes: ID, Name, Department, Salary
Add constructor, getters, and a print() method


Step 3: Store Employees in a vector using smart pointers
Use std::unique_ptr<Employee>

(Create a Vector for the Employees)

Step 4: Populate the vector using std::make_unique<>

(Add a few employees to the system)

Step 5: Display all employees using range-based for and auto

Step 6: Use lambda to sort employees by salary (NA)
Step 7: Demonstrate move semantics:
Move an employee from one list to another (NA)



